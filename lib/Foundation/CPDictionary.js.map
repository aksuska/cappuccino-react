{"version":3,"sources":["../../src/Foundation/CPDictionary.js"],"names":["CPDictionary","constructor","args","$$jsMap","Map","i","length","_setObjectForKey","object","key","className","ourKey","set"],"mappings":";;;;;;AAIA;;;;AACA;;;;;;AALA;;;;AAOe,MAAMA,YAAN,4BAAoC;;AAIlD;AACAC,aAAY,GAAGC,IAAf,EAAqB;AACpB;AACA,OAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,OAAK,IAAIC,IAAE,CAAX,EAAcA,IAAEH,KAAKI,MAArB,EAA6BD,KAAG,CAAhC,EAAmC;AAClC,QAAKE,gBAAL,CAAsBL,KAAKG,IAAE,CAAP,CAAtB,EAAiCH,KAAKG,CAAL,CAAjC;AACA;AACD;;AAED;AACAE,kBAAiBC,MAAjB,EAAyBC,GAAzB,EAA8B;AAC7B;AACA,MAAIA,QAAQ,IAAZ,EACC,gCAAe,6CAAf,EAA8D,KAAKC,SAAnE,EADD,KAEK,IAAIF,UAAU,IAAd,EACJ,gCAAe,0DAAf,EAA2E,KAAKE,SAAhF,EAA2FD,GAA3F;;AAED;AACA,QAAME,SAAS,0BAAaF,GAAb,EAAkB,eAAlB,EAAmC,IAAnC,CAAf;AACA,MAAIE,WAAW,IAAf,EACC,gCAAe,6CAAf,EAA8D,KAAKD,SAAnE,EADD,KAGC,KAAKP,OAAL,CAAaS,GAAb,CAAiBD,MAAjB,EAAyBH,MAAzB;AACD;AA3BiD;kBAA9BR,Y","file":"CPDictionary.js","sourcesContent":["/**\n * Implementation of NSDictionary. We have a has-a relationship with the native Map object\n **/\n\nimport objj_msgSend, {objj_throw_arg} from '../Objective-J';\nimport CPObject from './CPObject';\n\nexport default class CPDictionary extends CPObject {\n\n\t$$jsMap;\n\t\n\t// allows for shorthand conversion of literal syntax @{key: value, ...}\n\tconstructor(...args) {\n\t\tsuper();\n\t\tthis.$$jsMap = new Map();\n\t\tfor (let i=0; i<args.length; i+=2) {\n\t\t\tthis._setObjectForKey(args[i+1], args[i]);\n\t\t}\n\t}\n\n\t// pass through private method so we can raise exceptions when we need to\n\t_setObjectForKey(object, key) {\n\t\t// null key is exception\n\t\tif (key === null)\n\t\t\tobjj_throw_arg(\"-[%@ setObject:forKey:]: key cannot be null\", this.className);\n\t\telse if (object == null)\n\t\t\tobjj_throw_arg(\"-[%@ setObject:forKey:]: object cannot be null (key: %@)\", this.className, key);\n\n\t\t// we need to copy key, but there is a chance we'll get null\n\t\tconst ourKey = objj_msgSend(key, 'copyWithZone:', null);\n\t\tif (ourKey === null)\n\t\t\tobjj_throw_arg(\"-[%@ setObject:forKey:]: key cannot be null\", this.className);\n\t\telse\n\t\t\tthis.$$jsMap.set(ourKey, object);\n\t}\n}"]}