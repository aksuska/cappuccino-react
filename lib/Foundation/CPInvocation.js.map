{"version":3,"sources":["../../src/Foundation/CPInvocation.js"],"names":["CPInvocation","selector","$$selector","aSelector","target","$$target","aTarget","methodSignature","$$methodSignature","anything","argumentsRetained","invocationWithMethodSignature_","sig","name","new","setArgument_atIndex_","argumentLocation","idx","numberOfArguments","className","$$argList","getArgumentAtIndex_","retainArguments","invoke","$$retValue","invokeWithTarget_","setReturnValue_","buffer","returnValue"],"mappings":"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","file":"CPInvocation.js","sourcesContent":["/**\n * Implementation of NSInvocation.\n **/\n\nimport {objj_throw_arg} from '../Objective-J';\nimport CPObject from './CPObject';\n\nexport default class CPInvocation extends CPObject {\n\n\t$$selector = null;\n\t$$target = null;\n\t$$methodSignature = null;\n\t$$argList = [];\n\t$$retValue;\n\t\n\tget selector() {return this.$$selector;}\n\tset selector(aSelector) {this.$$selector = aSelector;}\n\n\tget target () {return this.$$target;}\n\tset target(aTarget) {this.$$target = aTarget;}\n\n\tget methodSignature() {return this.$$methodSignature;}\n\tset methodSignature(anything) {objj_throw_arg(\"Assignment to readonly property\");}\n\n\t// will always return true. See retainArguments() for more information\n\tget argumentsRetained() {return true;}\n\tset argumentsRetained(anything) {objj_throw_arg(\"Assignment to readonly property\");}\n\n\tstatic invocationWithMethodSignature_(sig) {\n\t\t// exception if signature null\n\t\tif (sig === null)\n\t\t\tobjj_throw_arg(\"+[%s _invocationWithMethodSignature:frame:]: method signature argument cannot be null\", this.name);\n\n\t\treturn this.new();\n\t}\n\n\tsetArgument_atIndex_(argumentLocation, idx) {\n\t\t// silently ignore if we are not initialized properly\n\t\tif (this.$$methodSignature === null)\n\t\t\treturn;\n\n\t\t// we have to re-test to make Flow happy\n\t\tif (idx >= this.$$methodSignature.numberOfArguments) {\n\t\t\tobjj_throw_arg(\"-[%@ setArgument:atIndex:]: index (%i) out of bounds [-1, %i]\", this.className, idx, this.$$methodSignature.numberOfArguments - 1);\n\t\t}\n\n\t\t// first two args are actually target & sel\n\t\tif (idx === 0)\n\t\t\tthis.$$target = argumentLocation;\n\t\telse if (idx === 1)\n\t\t\tthis.$$selector = argumentLocation;\n\t\telse if (this.$$argList !== null) // safety check since we can't guarantee we were initialized properly\n\t\t\tthis.$$argList[idx] = argumentLocation;\n\t}\n\n\t// JS doesn't support pass-by-reference, so we can't implement getArgument:atIndex:\n\tgetArgumentAtIndex_(idx) {\n\t\t// silently ignore if we are not initialized properly\n\t\tif (this.$$methodSignature === null)\n\t\t\treturn;\n\n\t\tif (idx >= this.$$methodSignature.numberOfArguments) {\n\t\t\tobjj_throw_arg(\"-[%@ getArgumentAtIndex:]: index (%i) out of bounds [-1, %i]\", this.className, idx, this.$$methodSignature.numberOfArguments - 1);\n\t\t}\n\n\t\tif (idx === 0)\n\t\t\treturn this.target;\n\t\telse if (idx === 1)\n\t\t\treturn this.selector;\n\t\telse if (this.$$argList !== null) // safety check since we can't guarantee we were initialized properly\n\t\t\treturn this.$$argList[idx];\n\t}\n\n\tretainArguments() {\n\t\t// this is basically a no-op since we don't have a reasonable JS replacement. Weakmap is close, but no iterable\n\t\t// so we can't convert from one to the other\n\t}\n\n\tinvoke() {\n\t\t// silently ignore if we weren't set up properly\n\t\tif (this.$$methodSignature === null || this.$$target === null || this.$$selector === null)\n\t\t\treturn;\n\n\t\t// invoke and store any result, if applicable. Return value should be undefined if method has no return value\n\t\tthis.$$retValue = this.$$target[this.$$selector](...this.$$argList);\n\t}\n\n\tinvokeWithTarget_(aTarget) {\n\t\tthis.$$target = aTarget;\n\t\tthis.invoke();\n\t}\n\n\t// JS cannot pass by reference so this should be the value\n\tsetReturnValue_(buffer) {\n\t\tthis.$$retValue = buffer;\n\t}\n\t\n\t// JS cannot pass by reference so tso we can't implement getReturnValue:\n\treturnValue() {\n\t\treturn this.$$retValue;\n\t}\n}\n"]}