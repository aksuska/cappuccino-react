{"version":3,"sources":["../../src/Foundation/CPString.js"],"names":["vsprintf","require","CPString","constructor","jsString","undefined","$$jsString","description","string","alloc","initWithString_","stringWithString_","aString","stringWithFormat_","format","args","initWithFormat_locale_arguments_","localizedStringWithFormat_","className","self","init","initWithFormat_","initWithFormat_arguments_","initWithFormat_locale_","locale","formatString","replace","values","map","element"],"mappings":";;;;;;AAIA;;AACA;;;;;;AALA;;;;AAMA,MAAMA,WAAWC,QAAQ,YAAR,EAAsBD,QAAvC;;AAEe,MAAME,QAAN,4BAAgC;;AAI9C;AACAC,aAAYC,QAAZ,EAAsB;AACrB;AADqB;AAAA;AAAA;AAAA,UAHT;AAGS;AAErB,MAAIA,aAAa,IAAb,IAAqBA,aAAaC,SAAtC,EACC,KAAKC,UAAL,GAAkBF,QAAlB;AACD;;AAED,KAAIA,QAAJ,GAAe;AACd,SAAO,KAAKE,UAAZ;AACA;;AAED,KAAIC,WAAJ,GAAkB;AACjB,SAAO,IAAP;AACA;;AAED,QAAOC,MAAP,GAAgB;AACf,SAAO,KAAKC,KAAL,GAAaC,eAAb,CAA6B,IAAIR,QAAJ,CAAa,EAAb,CAA7B,CAAP;AACA;;AAED,QAAOS,iBAAP,CAAyBC,OAAzB,EAAkC;AACjC,SAAO,KAAKH,KAAL,GAAaC,eAAb,CAA6BE,OAA7B,CAAP;AACA;;AAED,QAAOC,iBAAP,CAAyBC,MAAzB,EAAiC,GAAGC,IAApC,EAA0C;AACzC,SAAO,KAAKN,KAAL,GAAaO,gCAAb,CAA8CF,MAA9C,EAAsD,IAAtD,EAA4DC,IAA5D,CAAP;AACA;;AAED;AACA,QAAOE,0BAAP,CAAkCH,MAAlC,EAA0C,GAAGC,IAA7C,EAAmD;AAClD,SAAO,KAAKN,KAAL,GAAaO,gCAAb,CAA8CF,MAA9C,EAAsD,IAAtD,EAA4DC,IAA5D,CAAP;AACA;;AAEDL,iBAAgBE,OAAhB,EAAyB;AACxB,MAAIA,YAAY,IAAhB,EAAsB;AACrB,mCAAe,sCAAf,EAAuD,KAAKM,SAA5D;AACA,UAAO,IAAP;AACA;;AAED,MAAIC,OAAO,MAAMC,IAAN,EAAX;AACA,MAAID,IAAJ,EAAU;AACTA,QAAKb,UAAL,GAAkBM,QAAQN,UAA1B;AACA;AACD,SAAOa,IAAP;AACA;;AAEDE,iBAAgBP,MAAhB,EAAwB,GAAGC,IAA3B,EAAiC;AAChC,SAAO,KAAKC,gCAAL,CAAsCF,MAAtC,EAA8C,IAA9C,EAAoDC,IAApD,CAAP;AACA;;AAEDO,2BAA0BR,MAA1B,EAAkCC,IAAlC,EAAwC;AACvC,SAAO,KAAKC,gCAAL,CAAsCF,MAAtC,EAA8C,IAA9C,EAAoDC,IAApD,CAAP;AACA;;AAED;AACAQ,wBAAuBT,MAAvB,EAA+BU,MAA/B,EAAuC,GAAGT,IAA1C,EAAgD;AAC/C,SAAO,KAAKC,gCAAL,CAAsCF,MAAtC,EAA8C,IAA9C,EAAoDC,IAApD,CAAP;AACA;;AAED;AACAC,kCAAiCF,MAAjC,EAAyCU,MAAzC,EAAiDT,IAAjD,EAAuD;AACtD,MAAID,WAAW,IAAf,EAAqB;AACpB,mCAAe,uDAAf,EAAwE,KAAKI,SAA7E;AACA,UAAO,IAAP;AACA;;AAED,MAAIC,OAAO,MAAMC,IAAN,EAAX;AACA,MAAID,IAAJ,EAAU;AACT;AACA,OAAIM,eAAeX,OAAOV,QAAP,CAAgBsB,OAAhB,CAAwB,IAAxB,EAA8B,IAA9B,CAAnB;AACA,OAAIC,SAASZ,KAAKa,GAAL,CAASC,WAAWA,wCAA8B,gCAAeA,OAAf,EAAwB,aAAxB,EAAuC,UAAvC,CAA9B,GAAmFA,OAAvG,CAAb;AACAV,QAAKb,UAAL,GAAkBN,SAASyB,YAAT,EAAuBE,MAAvB,CAAlB;AACA;AACD,SAAOR,IAAP;AACA;AA7E6C;kBAA1BjB,Q","file":"CPString.js","sourcesContent":["/**\n * Implementation of NSString. We have a has-a relationship with the native JS string\n **/\n\nimport {objj_propGuard, objj_throw_arg} from '../Objective-J';\nimport CPObject from './CPObject';\nconst vsprintf = require(\"sprintf-js\").vsprintf;\n\nexport default class CPString extends CPObject {\n\n\t$$jsString = '';\n\n\t// basically a convenience constructor so we can do shorthand conversions\n\tconstructor(jsString) {\n\t\tsuper();\n\t\tif (jsString !== null && jsString !== undefined)\n\t\t\tthis.$$jsString = jsString;\n\t}\n\n\tget jsString() {\n\t\treturn this.$$jsString;\n\t}\n\n\tget description() {\n\t\treturn this;\n\t}\n\n\tstatic string() {\n\t\treturn this.alloc().initWithString_(new CPString(\"\"));\n\t}\n\n\tstatic stringWithString_(aString) {\n\t\treturn this.alloc().initWithString_(aString);\n\t}\n\n\tstatic stringWithFormat_(format, ...args) {\n\t\treturn this.alloc().initWithFormat_locale_arguments_(format, null, args);\n\t}\n\n\t// TODO: CPLocale support: method should call [CPLocale currentLocale]\n\tstatic localizedStringWithFormat_(format, ...args) {\n\t\treturn this.alloc().initWithFormat_locale_arguments_(format, null, args);\n\t}\n\n\tinitWithString_(aString) {\n\t\tif (aString === null) {\n\t\t\tobjj_throw_arg(\"-[%@ initWithString:]: null argument\", this.className);\n\t\t\treturn null;\n\t\t}\n\n\t\tlet self = super.init();\n\t\tif (self) {\n\t\t\tself.$$jsString = aString.$$jsString;\n\t\t}\n\t\treturn self;\n\t}\n\n\tinitWithFormat_(format, ...args) {\n\t\treturn this.initWithFormat_locale_arguments_(format, null, args);\n\t}\n\t\n\tinitWithFormat_arguments_(format, args) {\n\t\treturn this.initWithFormat_locale_arguments_(format, null, args);\n\t}\n\n\t// CPLocale support?\n\tinitWithFormat_locale_(format, locale, ...args) {\n\t\treturn this.initWithFormat_locale_arguments_(format, null, args);\n\t}\n\n\t// TODO: CPLocale support?\n\tinitWithFormat_locale_arguments_(format, locale, args) {\n\t\tif (format === null) {\n\t\t\tobjj_throw_arg(\"-[%@ initWithFormat:locale:arguments:]: null argument\", this.className);\n\t\t\treturn null;\n\t\t}\n\n\t\tlet self = super.init();\n\t\tif (self) {\n\t\t\t// %@ will always be a string, so convert, but objects must change to description\n\t\t\tlet formatString = format.jsString.replace(/%@/, '%s');\n\t\t\tlet values = args.map(element => element instanceof CPObject ? objj_propGuard(element, 'description', 'jsString') : element);\n\t\t\tself.$$jsString = vsprintf(formatString, values);\n\t\t}\n\t\treturn self;\n\t}\n}\n"]}